{"version":3,"sources":["../../../src/modules/player/player.controller.ts"],"sourcesContent":["import { Controller, Get, Put, Query } from '@nestjs/common'\nimport {\n  ApiForbiddenResponse,\n  ApiOkResponse,\n  ApiQuery,\n  ApiTags,\n} from '@nestjs/swagger'\n\nimport { PlayerService } from './player.service'\n\nimport { Device, PlaybackState, Success } from '@common/dtos'\nimport { Token, ApiAuth, AuthenticationType } from '@modules/auth'\n\n@Controller('player')\n@ApiTags('player')\n@ApiAuth(AuthenticationType.ACCESS_TOKEN)\nexport class PlayerController {\n  constructor(private readonly playerService: PlayerService) {}\n\n  @Get('/devices')\n  @ApiOkResponse({\n    type: Device,\n    description: 'Available devices has been succesfully found',\n  })\n  availableDevices(@Token() accessToken: string) {\n    return this.playerService.availableDevices(accessToken)\n  }\n\n  @Get('/state')\n  @ApiOkResponse({\n    type: PlaybackState,\n    description: 'Current playback state has been succesfully found',\n  })\n  currentPlaybackState(@Token() accessToken: string) {\n    return this.playerService.currentPlaybackState(accessToken)\n  }\n\n  @Put('/pause')\n  @ApiQuery({ name: 'afterTime', type: Number, required: false })\n  @ApiQuery({ name: 'deviceId', type: String, required: false })\n  @ApiForbiddenResponse({\n    description: 'No device is currently playing',\n  })\n  @ApiOkResponse({\n    description: 'Player state has been succesfully paused',\n    type: Success,\n  })\n  pausePlayer(\n    @Token() accessToken: string,\n    @Query('afterTime') afterTime?: number,\n    @Query('deviceId') deviceId?: string\n  ) {\n    return this.playerService.pausePlayer(accessToken, afterTime, deviceId)\n  }\n\n  @Put('/resume')\n  @ApiQuery({ name: 'deviceId', type: String, required: false })\n  @ApiForbiddenResponse({\n    description: 'Device is already playing',\n  })\n  @ApiOkResponse({\n    description: 'Player state has been succesfully resumed',\n    type: Success,\n  })\n  resumePlayer(\n    @Token() accessToken: string,\n    @Query('deviceId') deviceId?: string\n  ) {\n    return this.playerService.resumePlayer(accessToken, deviceId)\n  }\n}\n"],"names":["PlayerController","availableDevices","accessToken","playerService","currentPlaybackState","pausePlayer","afterTime","deviceId","resumePlayer","constructor","Get","ApiOkResponse","type","Device","description","Token","PlaybackState","Put","ApiQuery","name","Number","required","String","ApiForbiddenResponse","Success","Query","Controller","ApiTags","ApiAuth","AuthenticationType","ACCESS_TOKEN"],"mappings":";;;;+BAgBaA;;;eAAAA;;;wBAhB+B;yBAMrC;+BAEuB;sBAEiB;sBACI;;;;;;;;;;;;;;;IAKtCA,mBAAN;IAQLC,iBAAiB,AAASC,WAAmB,EAAE;QAC7C,OAAO,IAAI,CAACC,aAAa,CAACF,gBAAgB,CAACC;IAC7C;IAOAE,qBAAqB,AAASF,WAAmB,EAAE;QACjD,OAAO,IAAI,CAACC,aAAa,CAACC,oBAAoB,CAACF;IACjD;IAYAG,YACE,AAASH,WAAmB,EAC5B,AAAoBI,SAAkB,EACtC,AAAmBC,QAAiB,EACpC;QACA,OAAO,IAAI,CAACJ,aAAa,CAACE,WAAW,CAACH,aAAaI,WAAWC;IAChE;IAWAC,aACE,AAASN,WAAmB,EAC5B,AAAmBK,QAAiB,EACpC;QACA,OAAO,IAAI,CAACJ,aAAa,CAACK,YAAY,CAACN,aAAaK;IACtD;IApDAE,YAA6BN,cAA8B;6BAA9BA;IAA+B;AAqD9D;;IAnDGO,IAAAA,WAAG,EAAC;IACJC,IAAAA,sBAAa,EAAC;QACbC,MAAMC,YAAM;QACZC,aAAa;IACf;IACkBC,aAAAA,IAAAA,WAAK;;;;;GARZf;;IAYVU,IAAAA,WAAG,EAAC;IACJC,IAAAA,sBAAa,EAAC;QACbC,MAAMI,mBAAa;QACnBF,aAAa;IACf;IACsBC,aAAAA,IAAAA,WAAK;;;;;GAjBhBf;;IAqBViB,IAAAA,WAAG,EAAC;IACJC,IAAAA,iBAAQ,EAAC;QAAEC,MAAM;QAAaP,MAAMQ;QAAQC,UAAU;IAAM;IAC5DH,IAAAA,iBAAQ,EAAC;QAAEC,MAAM;QAAYP,MAAMU;QAAQD,UAAU;IAAM;IAC3DE,IAAAA,6BAAoB,EAAC;QACpBT,aAAa;IACf;IACCH,IAAAA,sBAAa,EAAC;QACbG,aAAa;QACbF,MAAMY,aAAO;IACf;IAEGT,aAAAA,IAAAA,WAAK;IACLU,aAAAA,IAAAA,aAAK,EAAC;IACNA,aAAAA,IAAAA,aAAK,EAAC;;;;;;;GAlCEzB;;IAuCViB,IAAAA,WAAG,EAAC;IACJC,IAAAA,iBAAQ,EAAC;QAAEC,MAAM;QAAYP,MAAMU;QAAQD,UAAU;IAAM;IAC3DE,IAAAA,6BAAoB,EAAC;QACpBT,aAAa;IACf;IACCH,IAAAA,sBAAa,EAAC;QACbG,aAAa;QACbF,MAAMY,aAAO;IACf;IAEGT,aAAAA,IAAAA,WAAK;IACLU,aAAAA,IAAAA,aAAK,EAAC;;;;;;GAlDEzB;AAAAA;IAHZ0B,IAAAA,kBAAU,EAAC;IACXC,IAAAA,gBAAO,EAAC;IACRC,IAAAA,aAAO,EAACC,wBAAkB,CAACC,YAAY;;;eAEM,4BAAa,4BAAb,4BAAa;;GAD9C9B"}