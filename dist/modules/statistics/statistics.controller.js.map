{"version":3,"sources":["../../../src/modules/statistics/statistics.controller.ts"],"sourcesContent":["import { Controller, Get, Query } from '@nestjs/common'\nimport { ApiOkResponse, ApiQuery, ApiTags } from '@nestjs/swagger'\n\nimport { StatisticsService } from './statistics.service'\nimport { LastItemQuery, TopItemQuery } from './dtos'\nimport { ApiItemQuery } from './decorators'\n\nimport { Token, ApiAuth } from '@modules/auth'\nimport { AuthenticationType } from '@modules/auth/enums'\nimport { Analysis, Artist, Genres, Track } from '@common/dtos'\n\n@Controller('statistics')\n@ApiTags('statistics')\n@ApiAuth(AuthenticationType.ACCESS_TOKEN)\nexport class StatisticsController {\n  constructor(private readonly statisticsService: StatisticsService) {}\n\n  @Get('/last-tracks')\n  @ApiItemQuery({ withCursors: true })\n  @ApiOkResponse({\n    description: 'Last tracks has been succesfully found',\n    type: [Track],\n  })\n  lastTracks(\n    @Token() accessToken: string,\n    @Query() { limit, before, after }: LastItemQuery\n  ) {\n    return this.statisticsService.lastTracks(accessToken, limit, before, after)\n  }\n\n  @Get('/top-tracks')\n  @ApiItemQuery({ withOffset: true })\n  @ApiOkResponse({\n    description: 'Top tracks has been succesfully found',\n    type: [Track],\n  })\n  topTracks(\n    @Token() accessToken: string,\n    @Query() { limit, timeRange, offset }: TopItemQuery\n  ) {\n    return this.statisticsService.topTracks(\n      accessToken,\n      limit,\n      timeRange,\n      offset\n    )\n  }\n\n  @Get('/top-genres')\n  @ApiItemQuery()\n  @ApiOkResponse({\n    description: 'Top genres has been succesfully found',\n    type: Genres,\n  })\n  topGenres(\n    @Token() accessToken: string,\n    @Query() { limit, timeRange, offset }: TopItemQuery\n  ) {\n    return this.statisticsService.topGenres(\n      accessToken,\n      limit,\n      timeRange,\n      offset\n    )\n  }\n\n  @Get('/top-artists')\n  @ApiItemQuery({ withOffset: true })\n  @ApiOkResponse({\n    description: 'Top artists has been succesfully found',\n    type: [Artist],\n  })\n  topArtists(\n    @Token() accessToken: string,\n    @Query() { limit, timeRange, offset }: TopItemQuery\n  ) {\n    return this.statisticsService.topArtists(\n      accessToken,\n      limit,\n      timeRange,\n      offset\n    )\n  }\n\n  @Get('/artist')\n  @ApiQuery({ name: 'id', type: String, required: true })\n  @ApiOkResponse({\n    description: 'Artist has been succesfully found',\n    type: Artist,\n  })\n  artist(@Token() accessToken: string, @Query('id') id: string) {\n    return this.statisticsService.artist(accessToken, id)\n  }\n\n  @Get('/analysis')\n  @ApiOkResponse({\n    description: 'Analysis has been succesfully generated',\n    type: Analysis,\n  })\n  analysis(@Token() accessToken: string) {\n    return this.statisticsService.analysis(accessToken)\n  }\n}\n"],"names":["StatisticsController","lastTracks","accessToken","limit","before","after","statisticsService","topTracks","timeRange","offset","topGenres","topArtists","artist","id","analysis","constructor","Get","ApiItemQuery","withCursors","ApiOkResponse","description","type","Track","Token","Query","withOffset","Genres","Artist","ApiQuery","name","String","required","Analysis","Controller","ApiTags","ApiAuth","AuthenticationType","ACCESS_TOKEN"],"mappings":"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"}