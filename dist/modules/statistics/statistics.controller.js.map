{"version":3,"sources":["../../../src/modules/statistics/statistics.controller.ts"],"sourcesContent":["import { Controller, Get, Query } from '@nestjs/common'\nimport { ApiOkResponse, ApiQuery, ApiTags } from '@nestjs/swagger'\n\nimport { StatisticsService } from './statistics.service'\nimport { ItemQuery, TopItemQuery } from './dtos'\nimport { ApiItemQuery } from './decorators'\n\nimport { Token, ApiAuth } from '@modules/auth'\nimport { AuthenticationType } from '@modules/auth/enums'\nimport { Analysis, Artist, Genres, Track } from '@common/dtos'\n\n@Controller('statistics')\n@ApiTags('statistics')\n@ApiAuth(AuthenticationType.ACCESS_TOKEN)\nexport class StatisticsController {\n  constructor(private readonly statisticsService: StatisticsService) {}\n\n  @Get('/last-tracks')\n  @ApiItemQuery()\n  @ApiOkResponse({\n    description: 'Last tracks has been succesfully found',\n    type: [Track],\n  })\n  lastTracks(@Token() accessToken: string, @Query() { limit }: ItemQuery) {\n    return this.statisticsService.lastTracks(accessToken, limit)\n  }\n\n  @Get('/top-tracks')\n  @ApiItemQuery(true)\n  @ApiOkResponse({\n    description: 'Top tracks has been succesfully found',\n    type: [Track],\n  })\n  topTracks(\n    @Token() accessToken: string,\n    @Query() { limit, timeRange, offset }: TopItemQuery\n  ) {\n    return this.statisticsService.topTracks(\n      accessToken,\n      limit,\n      timeRange,\n      offset\n    )\n  }\n\n  @Get('/top-genres')\n  @ApiItemQuery(true)\n  @ApiOkResponse({\n    description: 'Top genres has been succesfully found',\n    type: Genres,\n  })\n  topGenres(\n    @Token() accessToken: string,\n    @Query() { limit, timeRange, offset }: TopItemQuery\n  ) {\n    return this.statisticsService.topGenres(\n      accessToken,\n      limit,\n      timeRange,\n      offset\n    )\n  }\n\n  @Get('/top-artists')\n  @ApiItemQuery(true)\n  @ApiOkResponse({\n    description: 'Top artists has been succesfully found',\n    type: [Artist],\n  })\n  topArtists(\n    @Token() accessToken: string,\n    @Query() { limit, timeRange, offset }: TopItemQuery\n  ) {\n    return this.statisticsService.topArtists(\n      accessToken,\n      limit,\n      timeRange,\n      offset\n    )\n  }\n\n  @Get('/artist')\n  @ApiQuery({ name: 'id', type: String, required: true })\n  @ApiOkResponse({\n    description: 'Artist has been succesfully found',\n    type: Artist,\n  })\n  artist(@Token() accessToken: string, @Query('id') id: string) {\n    return this.statisticsService.artist(accessToken, id)\n  }\n\n  @Get('/analysis')\n  @ApiOkResponse({\n    description: 'Analysis has been succesfully generated',\n    type: Analysis,\n  })\n  analysis(@Token() accessToken: string) {\n    return this.statisticsService.analysis(accessToken)\n  }\n}\n"],"names":["StatisticsController","lastTracks","accessToken","limit","statisticsService","topTracks","timeRange","offset","topGenres","topArtists","artist","id","analysis","constructor","Get","ApiItemQuery","ApiOkResponse","description","type","Track","Token","Query","Genres","Artist","ApiQuery","name","String","required","Analysis","Controller","ApiTags","ApiAuth","AuthenticationType","ACCESS_TOKEN"],"mappings":"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"}