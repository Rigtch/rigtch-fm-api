{"version":3,"sources":["../../../src/modules/statistics/statistics.controller.ts"],"sourcesContent":["import { Controller, Get, Query } from '@nestjs/common'\nimport { ApiOkResponse, ApiQuery, ApiTags } from '@nestjs/swagger'\n\nimport { StatisticsService } from './statistics.service'\nimport { LimitQuery, TopItemsQuery } from './dtos'\nimport { TimeRange } from './enums'\n\nimport { Token, ApiAuth } from '@modules/auth'\nimport { AuthenticationType } from '@modules/auth/enums'\nimport { Analysis, Artist, Genres, Track } from '@common/dtos'\n\n@Controller('statistics')\n@ApiTags('statistics')\n@ApiAuth(AuthenticationType.ACCESS_TOKEN)\nexport class StatisticsController {\n  constructor(private readonly statisticsService: StatisticsService) {}\n\n  @Get('/last-tracks')\n  @ApiQuery({ name: 'limit', type: Number, required: false })\n  @ApiOkResponse({\n    description: 'Last tracks has been succesfully found',\n    type: [Track],\n  })\n  lastTracks(@Token() accessToken: string, @Query() { limit }: LimitQuery) {\n    return this.statisticsService.lastTracks(accessToken, limit)\n  }\n\n  @Get('/top-tracks')\n  @ApiQuery({ name: 'limit', type: Number, required: false })\n  @ApiQuery({ name: 'timeRange', enum: TimeRange, required: false })\n  @ApiOkResponse({\n    description: 'Top tracks has been succesfully found',\n    type: [Track],\n  })\n  topTracks(\n    @Token() accessToken: string,\n    @Query() { limit, timeRange }: TopItemsQuery\n  ) {\n    return this.statisticsService.topTracks(accessToken, limit, timeRange)\n  }\n\n  @Get('/top-genres')\n  @ApiQuery({ name: 'limit', type: Number, required: false })\n  @ApiQuery({ name: 'timeRange', enum: TimeRange, required: false })\n  @ApiOkResponse({\n    description: 'Top genres has been succesfully found',\n    type: Genres,\n  })\n  topGenres(\n    @Token() accessToken: string,\n    @Query() { limit, timeRange }: TopItemsQuery\n  ) {\n    return this.statisticsService.topGenres(accessToken, limit, timeRange)\n  }\n\n  @Get('/top-artists')\n  @ApiQuery({ name: 'limit', type: Number, required: false })\n  @ApiQuery({ name: 'timeRange', enum: TimeRange, required: false })\n  @ApiOkResponse({\n    description: 'Top artists has been succesfully found',\n    type: [Artist],\n  })\n  topArtists(\n    @Token() accessToken: string,\n    @Query() { limit, timeRange }: TopItemsQuery\n  ) {\n    return this.statisticsService.topArtists(accessToken, limit, timeRange)\n  }\n\n  @Get('/artist')\n  @ApiQuery({ name: 'id', type: String, required: true })\n  @ApiOkResponse({\n    description: 'Artist has been succesfully found',\n    type: Artist,\n  })\n  artist(@Token() accessToken: string, @Query('id') id: string) {\n    return this.statisticsService.artist(accessToken, id)\n  }\n\n  @Get('/analysis')\n  @ApiOkResponse({\n    description: 'Analysis has been succesfully generated',\n    type: Analysis,\n  })\n  analysis(@Token() accessToken: string) {\n    return this.statisticsService.analysis(accessToken)\n  }\n}\n"],"names":["StatisticsController","lastTracks","accessToken","limit","statisticsService","topTracks","timeRange","topGenres","topArtists","artist","id","analysis","constructor","Get","ApiQuery","name","type","Number","required","ApiOkResponse","description","Track","Token","Query","enum","TimeRange","Genres","Artist","String","Analysis","Controller","ApiTags","ApiAuth","AuthenticationType","ACCESS_TOKEN"],"mappings":"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"}