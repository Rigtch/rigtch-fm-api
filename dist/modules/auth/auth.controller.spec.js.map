{"version":3,"sources":["../../../src/modules/auth/auth.controller.spec.ts"],"sourcesContent":["import { test, describe, expect, beforeEach, vi } from 'vitest'\nimport { HttpStatus } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { Test, TestingModule } from '@nestjs/testing'\nimport { firstValueFrom, of } from 'rxjs'\n\nimport { AuthController } from './auth.controller'\nimport { AuthService } from './auth.service'\nimport { SecretData } from './dtos'\n\nimport { FormattedProfile } from '@common/types/spotify'\n\ndescribe('AuthController', () => {\n  const redirectUrl = 'http://test.com'\n\n  let authController: AuthController\n  let authService: AuthService\n\n  beforeEach(async () => {\n    const module: TestingModule = await Test.createTestingModule({\n      providers: [\n        AuthController,\n        {\n          provide: AuthService,\n          useValue: {\n            token: vi.fn(),\n            profile: vi.fn(),\n          },\n        },\n        {\n          provide: ConfigService,\n          useValue: {\n            get: vi.fn().mockReturnValue(redirectUrl),\n          },\n        },\n      ],\n    }).compile()\n\n    authController = module.get<AuthController>(AuthController)\n    authService = module.get<AuthService>(AuthService)\n  })\n\n  test('should be defined', () => {\n    expect(authController).toBeDefined()\n  })\n\n  test('login should return undefined', () => {\n    const { url, statusCode } = authController.login()\n\n    expect(url).toMatch(/authorize\\?/)\n    expect(statusCode).toEqual(HttpStatus.PERMANENT_REDIRECT)\n  })\n\n  test('callback should return valid redirect path', async () => {\n    const tokenResponse = {\n      accessToken: '123',\n      refreshToken: '456',\n      expiresIn: 3600,\n    }\n\n    vi.spyOn(authService, 'token').mockReturnValue(of(tokenResponse))\n\n    const { accessToken, refreshToken } = tokenResponse\n\n    expect(await authController.callback('code')).toEqual({\n      url: `${redirectUrl}/api/authorize?${new URLSearchParams({\n        accessToken,\n        refreshToken,\n      })}`,\n      statusCode: HttpStatus.PERMANENT_REDIRECT,\n    })\n  })\n\n  test('should refresh token', async () => {\n    const secretData: SecretData = {\n      accessToken: '123',\n      expiresIn: 3600,\n    }\n\n    vi.spyOn(authService, 'token').mockReturnValue(of(secretData))\n\n    expect(await firstValueFrom(authController.refresh('123'))).toEqual(\n      secretData\n    )\n  })\n\n  test('should return profile', async () => {\n    const profileMock: FormattedProfile = {\n      id: '123',\n      displayName: 'test',\n      email: 'email@test.com',\n      images: [\n        {\n          url: 'http://test.com',\n          height: 100,\n          width: 100,\n        },\n      ],\n      followers: 23,\n      country: 'BR',\n      href: 'http://test.com',\n    }\n\n    vi.spyOn(authService, 'profile').mockReturnValue(of(profileMock))\n\n    expect(await firstValueFrom(authController.profile('123'))).toEqual(\n      profileMock\n    )\n  })\n})\n"],"names":["describe","redirectUrl","authController","authService","beforeEach","module","Test","createTestingModule","providers","AuthController","provide","AuthService","useValue","token","vi","fn","profile","ConfigService","get","mockReturnValue","compile","test","expect","toBeDefined","url","statusCode","login","toMatch","toEqual","HttpStatus","PERMANENT_REDIRECT","tokenResponse","accessToken","refreshToken","expiresIn","spyOn","of","callback","URLSearchParams","secretData","firstValueFrom","refresh","profileMock","id","displayName","email","images","height","width","followers","country","href"],"mappings":";;;;wBAAuD;wBAC5B;wBACG;yBACM;sBACD;gCAEJ;6BACH;AAK5BA,IAAAA,gBAAQ,EAAC,kBAAkB;IACzB,MAAMC,cAAc;IAEpB,IAAIC;IACJ,IAAIC;IAEJC,IAAAA,kBAAU,EAAC;QACT,MAAMC,SAAwB,MAAMC,aAAI,CAACC,mBAAmB,CAAC;YAC3DC,WAAW;gBACTC,8BAAc;gBACd;oBACEC,SAASC,wBAAW;oBACpBC,UAAU;wBACRC,OAAOC,UAAE,CAACC,EAAE;wBACZC,SAASF,UAAE,CAACC,EAAE;oBAChB;gBACF;gBACA;oBACEL,SAASO,qBAAa;oBACtBL,UAAU;wBACRM,KAAKJ,UAAE,CAACC,EAAE,GAAGI,eAAe,CAAClB;oBAC/B;gBACF;aACD;QACH,GAAGmB,OAAO;QAEVlB,iBAAiBG,OAAOa,GAAG,CAAiBT,8BAAc;QAC1DN,cAAcE,OAAOa,GAAG,CAAcP,wBAAW;IACnD;IAEAU,IAAAA,YAAI,EAAC,qBAAqB;QACxBC,IAAAA,cAAM,EAACpB,gBAAgBqB,WAAW;IACpC;IAEAF,IAAAA,YAAI,EAAC,iCAAiC;QACpC,MAAM,EAAEG,GAAG,EAAEC,UAAU,EAAE,GAAGvB,eAAewB,KAAK;QAEhDJ,IAAAA,cAAM,EAACE,KAAKG,OAAO,CAAC;QACpBL,IAAAA,cAAM,EAACG,YAAYG,OAAO,CAACC,kBAAU,CAACC,kBAAkB;IAC1D;IAEAT,IAAAA,YAAI,EAAC,8CAA8C;QACjD,MAAMU,gBAAgB;YACpBC,aAAa;YACbC,cAAc;YACdC,WAAW;QACb;QAEApB,UAAE,CAACqB,KAAK,CAAChC,aAAa,SAASgB,eAAe,CAACiB,IAAAA,QAAE,EAACL;QAElD,MAAM,EAAEC,WAAW,EAAEC,YAAY,EAAE,GAAGF;QAEtCT,IAAAA,cAAM,EAAC,MAAMpB,eAAemC,QAAQ,CAAC,SAAST,OAAO,CAAC;YACpDJ,KAAK,CAAC,EAAEvB,YAAY,eAAe,EAAE,IAAIqC,gBAAgB;gBACvDN;gBACAC;YACF,GAAG,CAAC;YACJR,YAAYI,kBAAU,CAACC,kBAAkB;QAC3C;IACF;IAEAT,IAAAA,YAAI,EAAC,wBAAwB;QAC3B,MAAMkB,aAAyB;YAC7BP,aAAa;YACbE,WAAW;QACb;QAEApB,UAAE,CAACqB,KAAK,CAAChC,aAAa,SAASgB,eAAe,CAACiB,IAAAA,QAAE,EAACG;QAElDjB,IAAAA,cAAM,EAAC,MAAMkB,IAAAA,oBAAc,EAACtC,eAAeuC,OAAO,CAAC,SAASb,OAAO,CACjEW;IAEJ;IAEAlB,IAAAA,YAAI,EAAC,yBAAyB;QAC5B,MAAMqB,cAAgC;YACpCC,IAAI;YACJC,aAAa;YACbC,OAAO;YACPC,QAAQ;gBACN;oBACEtB,KAAK;oBACLuB,QAAQ;oBACRC,OAAO;gBACT;aACD;YACDC,WAAW;YACXC,SAAS;YACTC,MAAM;QACR;QAEArC,UAAE,CAACqB,KAAK,CAAChC,aAAa,WAAWgB,eAAe,CAACiB,IAAAA,QAAE,EAACM;QAEpDpB,IAAAA,cAAM,EAAC,MAAMkB,IAAAA,oBAAc,EAACtC,eAAec,OAAO,CAAC,SAASY,OAAO,CACjEc;IAEJ;AACF"}