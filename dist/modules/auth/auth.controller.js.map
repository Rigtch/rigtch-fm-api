{"version":3,"sources":["../../../src/modules/auth/auth.controller.ts"],"sourcesContent":["import { Controller, Get, HttpStatus, Query, Redirect } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { firstValueFrom } from 'rxjs'\nimport { ApiExcludeEndpoint, ApiOkResponse, ApiTags } from '@nestjs/swagger'\n\nimport { AuthService } from './auth.service'\nimport { spotifyAuthorizationScopes } from './config'\nimport { RedirectResponse } from './types'\nimport { Token, ApiAuth } from './decorators'\nimport { ProfileDto, SecretData } from './dtos'\n\nimport { Environment } from '~/config'\nimport { AuthenticationType } from '@modules/auth/enums'\n\nconst {\n  SPOTIFY_CALLBACK_URL,\n  SPOTIFY_CLIENT_ID,\n  SPOTIFY_ACCOUNTS_URL,\n  CLIENT_CALLBACK_URL,\n} = Environment\n\n@Controller('auth')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly configService: ConfigService\n  ) {}\n\n  @Get('login')\n  @ApiExcludeEndpoint()\n  @Redirect()\n  login(): RedirectResponse {\n    return {\n      url: `${this.configService.get(\n        SPOTIFY_ACCOUNTS_URL\n      )}/authorize?${new URLSearchParams({\n        client_id: this.configService.get(SPOTIFY_CLIENT_ID),\n        response_type: 'code',\n        redirect_uri: this.configService.get(SPOTIFY_CALLBACK_URL),\n        scope: spotifyAuthorizationScopes.join(' '),\n      })}`,\n      statusCode: HttpStatus.PERMANENT_REDIRECT,\n    }\n  }\n\n  @Get('callback')\n  @ApiExcludeEndpoint()\n  @Redirect()\n  async callback(@Query('code') code: string): Promise<RedirectResponse> {\n    const { accessToken, refreshToken } = await firstValueFrom(\n      this.authService.token({ code })\n    )\n\n    console.log('acessToken', accessToken)\n    console.log('refreshToken', refreshToken)\n\n    return {\n      url: `${this.configService.get(\n        CLIENT_CALLBACK_URL\n      )}/api/authorize?${new URLSearchParams({\n        accessToken,\n        refreshToken,\n      })}`,\n      statusCode: HttpStatus.PERMANENT_REDIRECT,\n    }\n  }\n\n  @Get('refresh')\n  @ApiAuth(AuthenticationType.REFRESH_TOKEN)\n  @ApiOkResponse({\n    description: 'Access token has been succesfully refreshed',\n    type: SecretData,\n  })\n  refresh(@Token() refreshToken: string) {\n    return this.authService.token({ refreshToken })\n  }\n\n  @Get('profile')\n  @ApiAuth(AuthenticationType.ACCESS_TOKEN)\n  @ApiOkResponse({\n    description: \"User's profile has been succesfully found\",\n    type: ProfileDto,\n  })\n  profile(@Token() accessToken: string) {\n    return this.authService.profile(accessToken)\n  }\n}\n"],"names":["AuthController","SPOTIFY_CALLBACK_URL","SPOTIFY_CLIENT_ID","SPOTIFY_ACCOUNTS_URL","CLIENT_CALLBACK_URL","Environment","login","url","configService","get","URLSearchParams","client_id","response_type","redirect_uri","scope","spotifyAuthorizationScopes","join","statusCode","HttpStatus","PERMANENT_REDIRECT","callback","code","accessToken","refreshToken","firstValueFrom","authService","token","console","log","refresh","profile","constructor","Get","ApiExcludeEndpoint","Redirect","Query","ApiAuth","AuthenticationType","REFRESH_TOKEN","ApiOkResponse","description","type","SecretData","Token","ACCESS_TOKEN","ProfileDto","Controller","ApiTags"],"mappings":";;;;+BAuBaA;;;eAAAA;;;wBAvBgD;wBAC/B;sBACC;yBAC4B;6BAE/B;yBACe;4BAEZ;sBACQ;yBAEX;uBACO;;;;;;;;;;;;;;;AAEnC,MAAM,EACJC,oBAAoB,EACpBC,iBAAiB,EACjBC,oBAAoB,EACpBC,mBAAmB,EACpB,GAAGC,oBAAW;IAIFL,iBAAN;IASLM,QAA0B;QACxB,OAAO;YACLC,KAAK,CAAC,EAAE,IAAI,CAACC,aAAa,CAACC,GAAG,CAC5BN,sBACA,WAAW,EAAE,IAAIO,gBAAgB;gBACjCC,WAAW,IAAI,CAACH,aAAa,CAACC,GAAG,CAACP;gBAClCU,eAAe;gBACfC,cAAc,IAAI,CAACL,aAAa,CAACC,GAAG,CAACR;gBACrCa,OAAOC,mCAA0B,CAACC,IAAI,CAAC;YACzC,GAAG,CAAC;YACJC,YAAYC,kBAAU,CAACC,kBAAkB;QAC3C;IACF;IAEA,MAGMC,SAAS,AAAeC,IAAY,EAA6B;QACrE,MAAM,EAAEC,WAAW,EAAEC,YAAY,EAAE,GAAG,MAAMC,IAAAA,oBAAc,EACxD,IAAI,CAACC,WAAW,CAACC,KAAK,CAAC;YAAEL;QAAK;QAGhCM,QAAQC,GAAG,CAAC,cAAcN;QAC1BK,QAAQC,GAAG,CAAC,gBAAgBL;QAE5B,OAAO;YACLhB,KAAK,CAAC,EAAE,IAAI,CAACC,aAAa,CAACC,GAAG,CAC5BL,qBACA,eAAe,EAAE,IAAIM,gBAAgB;gBACrCY;gBACAC;YACF,GAAG,CAAC;YACJN,YAAYC,kBAAU,CAACC,kBAAkB;QAC3C;IACF;IAQAU,QAAQ,AAASN,YAAoB,EAAE;QACrC,OAAO,IAAI,CAACE,WAAW,CAACC,KAAK,CAAC;YAAEH;QAAa;IAC/C;IAQAO,QAAQ,AAASR,WAAmB,EAAE;QACpC,OAAO,IAAI,CAACG,WAAW,CAACK,OAAO,CAACR;IAClC;IA9DAS,YACmBN,aACAjB,cACjB;2BAFiBiB;6BACAjB;IAChB;AA4DL;;IA1DGwB,IAAAA,WAAG,EAAC;IACJC,IAAAA,2BAAkB;IAClBC,IAAAA,gBAAQ;;;GARElC;;IAuBVgC,IAAAA,WAAG,EAAC;IACJC,IAAAA,2BAAkB;IAClBC,IAAAA,gBAAQ;IACOC,aAAAA,IAAAA,aAAK,EAAC;;;;;GA1BXnC;;IA6CVgC,IAAAA,WAAG,EAAC;IACJI,IAAAA,mBAAO,EAACC,yBAAkB,CAACC,aAAa;IACxCC,IAAAA,sBAAa,EAAC;QACbC,aAAa;QACbC,MAAMC,gBAAU;IAClB;IACSC,aAAAA,IAAAA,iBAAK;;;;;GAnDH3C;;IAuDVgC,IAAAA,WAAG,EAAC;IACJI,IAAAA,mBAAO,EAACC,yBAAkB,CAACO,YAAY;IACvCL,IAAAA,sBAAa,EAAC;QACbC,aAAa;QACbC,MAAMI,gBAAU;IAClB;IACSF,aAAAA,IAAAA,iBAAK;;;;;GA7DH3C;AAAAA;IAFZ8C,IAAAA,kBAAU,EAAC;IACXC,IAAAA,gBAAO,EAAC;;;eAGyB,wBAAW,4BAAX,wBAAW;eACT,qBAAa,4BAAb,qBAAa;;GAHpC/C"}