{"version":3,"sources":["../../../src/common/mocks/artist.mock.ts"],"sourcesContent":["import { FormattedArtist, SpotifyArtist } from '../types/spotify'\n\nexport const spotifyArtistMock: SpotifyArtist = {\n  external_urls: {\n    spotify: 'https://open.spotify.com/artist/7kWnE981vITXDnAD2cZmCV',\n  },\n  followers: {\n    href: undefined,\n    total: 265_520,\n  },\n  genres: [\n    \"black 'n' roll\",\n    'black metal',\n    'blackened crust',\n    'metal',\n    'norwegian black metal',\n    'norwegian death metal',\n    'norwegian metal',\n  ],\n  href: 'https://api.spotify.com/v1/artists/7kWnE981vITXDnAD2cZmCV',\n  id: '7kWnE981vITXDnAD2cZmCV',\n  images: [\n    {\n      height: 640,\n      url: 'https://i.scdn.co/image/ab6761610000e5eb0f08b008da9d91574819c92e',\n      width: 640,\n    },\n    {\n      height: 320,\n      url: 'https://i.scdn.co/image/ab676161000051740f08b008da9d91574819c92e',\n      width: 320,\n    },\n    {\n      height: 160,\n      url: 'https://i.scdn.co/image/ab6761610000f1780f08b008da9d91574819c92e',\n      width: 160,\n    },\n  ],\n  name: 'Darkthrone',\n  popularity: 43,\n  type: 'artist',\n  uri: 'spotify:artist:7kWnE981vITXDnAD2cZmCV',\n}\n\nexport const spotifyArtistsMock = Array.from({ length: 5 }).map(\n  () => spotifyArtistMock\n)\n\nexport const formattedArtistMock: FormattedArtist = {\n  id: '7kWnE981vITXDnAD2cZmCV',\n  name: 'Darkthrone',\n  genres: [\n    \"black 'n' roll\",\n    'black metal',\n    'blackened crust',\n    'metal',\n    'norwegian black metal',\n    'norwegian death metal',\n    'norwegian metal',\n  ],\n  href: 'https://open.spotify.com/artist/7kWnE981vITXDnAD2cZmCV',\n  images: [\n    {\n      height: 640,\n      url: 'https://i.scdn.co/image/ab6761610000e5eb0f08b008da9d91574819c92e',\n      width: 640,\n    },\n    {\n      height: 320,\n      url: 'https://i.scdn.co/image/ab676161000051740f08b008da9d91574819c92e',\n      width: 320,\n    },\n    {\n      height: 160,\n      url: 'https://i.scdn.co/image/ab6761610000f1780f08b008da9d91574819c92e',\n      width: 160,\n    },\n  ],\n}\n\nexport const formattedArtistsMock = Array.from({ length: 5 }).map(\n  () => formattedArtistMock\n)\n"],"names":["spotifyArtistMock","spotifyArtistsMock","formattedArtistMock","formattedArtistsMock","external_urls","spotify","followers","href","undefined","total","genres","id","images","height","url","width","name","popularity","type","uri","Array","from","length","map"],"mappings":";;;;;;;;;;;IAEaA,iBAAiB;eAAjBA;;IA0CAC,kBAAkB;eAAlBA;;IAIAC,mBAAmB;eAAnBA;;IAgCAC,oBAAoB;eAApBA;;;AA9EN,MAAMH,oBAAmC;IAC9CI,eAAe;QACbC,SAAS;IACX;IACAC,WAAW;QACTC,MAAMC;QACNC,OAAO;IACT;IACAC,QAAQ;QACN;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACDH,MAAM;IACNI,IAAI;IACJC,QAAQ;QACN;YACEC,QAAQ;YACRC,KAAK;YACLC,OAAO;QACT;QACA;YACEF,QAAQ;YACRC,KAAK;YACLC,OAAO;QACT;QACA;YACEF,QAAQ;YACRC,KAAK;YACLC,OAAO;QACT;KACD;IACDC,MAAM;IACNC,YAAY;IACZC,MAAM;IACNC,KAAK;AACP;AAEO,MAAMlB,qBAAqBmB,MAAMC,IAAI,CAAC;IAAEC,QAAQ;AAAE,GAAGC,GAAG,CAC7D,IAAMvB;AAGD,MAAME,sBAAuC;IAClDS,IAAI;IACJK,MAAM;IACNN,QAAQ;QACN;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACDH,MAAM;IACNK,QAAQ;QACN;YACEC,QAAQ;YACRC,KAAK;YACLC,OAAO;QACT;QACA;YACEF,QAAQ;YACRC,KAAK;YACLC,OAAO;QACT;QACA;YACEF,QAAQ;YACRC,KAAK;YACLC,OAAO;QACT;KACD;AACH;AAEO,MAAMZ,uBAAuBiB,MAAMC,IAAI,CAAC;IAAEC,QAAQ;AAAE,GAAGC,GAAG,CAC/D,IAAMrB"}