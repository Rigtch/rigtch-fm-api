{"version":3,"sources":["../../../src/common/adapters/artists.adapter.spec.ts"],"sourcesContent":["import { describe, test, expect } from 'vitest'\n\nimport {\n  spotifyArtistMock,\n  formattedArtistMock,\n  spotifyArtistsMock,\n  formattedArtistsMock,\n  spotifyResponseMockFactory,\n} from '../mocks'\n\nimport {\n  adaptArtist,\n  adaptArtists,\n  adaptPaginatedArtists,\n} from './artists.adapter'\n\ndescribe('adaptArtists', () => {\n  test('should adapt artist', () => {\n    expect(adaptArtist(spotifyArtistMock)).toEqual(formattedArtistMock)\n  })\n\n  test('should adapt artists', () => {\n    expect(adaptArtists(spotifyArtistsMock)).toEqual(formattedArtistsMock)\n  })\n\n  test('should adapt paginated artists', () => {\n    expect(\n      adaptPaginatedArtists({\n        ...spotifyResponseMockFactory(spotifyArtistsMock),\n        offset: 0,\n      })\n    ).toEqual(spotifyResponseMockFactory(formattedArtistsMock))\n  })\n})\n"],"names":["describe","test","expect","adaptArtist","spotifyArtistMock","toEqual","formattedArtistMock","adaptArtists","spotifyArtistsMock","formattedArtistsMock","adaptPaginatedArtists","spotifyResponseMockFactory","offset"],"mappings":";;;;wBAAuC;uBAQhC;gCAMA;AAEPA,IAAAA,gBAAQ,EAAC,gBAAgB;IACvBC,IAAAA,YAAI,EAAC,uBAAuB;QAC1BC,IAAAA,cAAM,EAACC,IAAAA,2BAAW,EAACC,wBAAiB,GAAGC,OAAO,CAACC,0BAAmB;IACpE;IAEAL,IAAAA,YAAI,EAAC,wBAAwB;QAC3BC,IAAAA,cAAM,EAACK,IAAAA,4BAAY,EAACC,yBAAkB,GAAGH,OAAO,CAACI,2BAAoB;IACvE;IAEAR,IAAAA,YAAI,EAAC,kCAAkC;QACrCC,IAAAA,cAAM,EACJQ,IAAAA,qCAAqB,EAAC;YACpB,GAAGC,IAAAA,iCAA0B,EAACH,yBAAkB,CAAC;YACjDI,QAAQ;QACV,IACAP,OAAO,CAACM,IAAAA,iCAA0B,EAACF,2BAAoB;IAC3D;AACF"}