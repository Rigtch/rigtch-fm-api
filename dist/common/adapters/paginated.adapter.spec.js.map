{"version":3,"sources":["../../../src/common/adapters/paginated.adapter.spec.ts"],"sourcesContent":["import { describe, test, expect } from 'vitest'\n\nimport {\n  formattedArtistsMock,\n  spotifyArtistsMock,\n  spotifyResponseMockFactory,\n} from '../mocks'\n\nimport { adaptArtists } from './artists.adapter'\nimport { adaptPaginated } from './paginated.adapter'\n\ndescribe('adaptPaginated', () => {\n  const spotifyArtistsResponseMock = {\n    ...spotifyResponseMockFactory(spotifyArtistsMock),\n    offset: 0,\n  }\n\n  const formattedArtistsResponseMock = {\n    ...spotifyResponseMockFactory(formattedArtistsMock),\n    offset: 0,\n  }\n\n  test('should adapt paginated data', () => {\n    expect(adaptPaginated(spotifyArtistsResponseMock, adaptArtists)).toEqual(\n      formattedArtistsResponseMock\n    )\n  })\n})\n"],"names":["describe","spotifyArtistsResponseMock","spotifyResponseMockFactory","spotifyArtistsMock","offset","formattedArtistsResponseMock","formattedArtistsMock","test","expect","adaptPaginated","adaptArtists","toEqual"],"mappings":";;;;wBAAuC;uBAMhC;gCAEsB;kCACE;AAE/BA,IAAAA,gBAAQ,EAAC,kBAAkB;IACzB,MAAMC,6BAA6B;QACjC,GAAGC,IAAAA,iCAA0B,EAACC,yBAAkB,CAAC;QACjDC,QAAQ;IACV;IAEA,MAAMC,+BAA+B;QACnC,GAAGH,IAAAA,iCAA0B,EAACI,2BAAoB,CAAC;QACnDF,QAAQ;IACV;IAEAG,IAAAA,YAAI,EAAC,+BAA+B;QAClCC,IAAAA,cAAM,EAACC,IAAAA,gCAAc,EAACR,4BAA4BS,4BAAY,GAAGC,OAAO,CACtEN;IAEJ;AACF"}